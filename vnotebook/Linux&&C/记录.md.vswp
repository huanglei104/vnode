vnote_backup_file_826537664 /home/huanglei/vnote/vnotebook/Linux&&C/记录.md
## 如果自己写了一个shell， 需要在/etc/shells中加入， 否则不能用来登录 （PAM）

## 数字和指针间的转换：
     在64位的机器上，指针是8字节的，int 是4字节的，如果直接进行转换，会报类型不匹配的warning，所以需要进行两次转换。
     int a 转换成指针
     1.  long aa = a ;   //将32位的数先转换成64位。
     2.  p = (void*)aa  //将64位的数转换成指针。
     （或者  p = (void*)(long)a, 直接 p = (void*)a不可以） 


## 指针的递增或递减操作
    int 指针 ，int的大小是知道的，所以递增或递减时，增加或减少对应的大小即可
    void指针，void大小是不确定的，所以递增或递减时，只增加或减少1
    函数指针， 函数大小是不确定的，所以递增或递减时，只增加或减少1。但这种操作没有意义（+1或-1很可能还在函数内部）

## 字节对齐
     1. 变量本身对齐。如：int 占4字节，所以int变量要放在4字节对齐的位置上
     2. 整体对齐。如：某个结构体本来只需要13个字节，但为了满足4字节对齐，会占用16字节
     3. 如果结构体a有一个结构体b变量bb，则bb按b内对齐字节最大的一个对齐，而不是按bb所占用字节大小对齐。